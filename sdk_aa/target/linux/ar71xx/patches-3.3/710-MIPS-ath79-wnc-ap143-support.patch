diff -Nur a/arch/mips/ath79/clock.c b/arch/mips/ath79/clock.c
--- a/arch/mips/ath79/clock.c	2014-11-06 15:26:03.523748238 +0800
+++ b/arch/mips/ath79/clock.c	2014-11-06 11:46:27.011326588 +0800
@@ -295,6 +295,82 @@
 	iounmap(dpll_base);
 }
 
+static void __init qca953x_clocks_init(void)
+{
+	u32 pll, out_div, ref_div, nint, frac, clk_ctrl, postdiv;
+	u32 cpu_pll, ddr_pll;
+	u32 bootstrap;
+
+	bootstrap = ath79_reset_rr(QCA953X_RESET_REG_BOOTSTRAP);
+	if (bootstrap &	QCA953X_BOOTSTRAP_REF_CLK_40)
+		ath79_ref_clk.rate = 40 * 1000 * 1000;
+	else
+		ath79_ref_clk.rate = 25 * 1000 * 1000;
+
+	pll = ath79_pll_rr(QCA953X_PLL_CPU_CONFIG_REG);
+	out_div = (pll >> QCA953X_PLL_CPU_CONFIG_OUTDIV_SHIFT) &
+		  QCA953X_PLL_CPU_CONFIG_OUTDIV_MASK;
+	ref_div = (pll >> QCA953X_PLL_CPU_CONFIG_REFDIV_SHIFT) &
+		  QCA953X_PLL_CPU_CONFIG_REFDIV_MASK;
+	nint = (pll >> QCA953X_PLL_CPU_CONFIG_NINT_SHIFT) &
+	       QCA953X_PLL_CPU_CONFIG_NINT_MASK;
+	frac = (pll >> QCA953X_PLL_CPU_CONFIG_NFRAC_SHIFT) &
+	       QCA953X_PLL_CPU_CONFIG_NFRAC_MASK;
+
+	cpu_pll = nint * ath79_ref_clk.rate / ref_div;
+	cpu_pll += frac * (ath79_ref_clk.rate >> 6) / ref_div;
+	cpu_pll /= (1 << out_div);
+
+	pll = ath79_pll_rr(QCA953X_PLL_DDR_CONFIG_REG);
+	out_div = (pll >> QCA953X_PLL_DDR_CONFIG_OUTDIV_SHIFT) &
+		  QCA953X_PLL_DDR_CONFIG_OUTDIV_MASK;
+	ref_div = (pll >> QCA953X_PLL_DDR_CONFIG_REFDIV_SHIFT) &
+		  QCA953X_PLL_DDR_CONFIG_REFDIV_MASK;
+	nint = (pll >> QCA953X_PLL_DDR_CONFIG_NINT_SHIFT) &
+	       QCA953X_PLL_DDR_CONFIG_NINT_MASK;
+	frac = (pll >> QCA953X_PLL_DDR_CONFIG_NFRAC_SHIFT) &
+	       QCA953X_PLL_DDR_CONFIG_NFRAC_MASK;
+
+	ddr_pll = nint * ath79_ref_clk.rate / ref_div;
+	ddr_pll += frac * (ath79_ref_clk.rate >> 6) / (ref_div << 4);
+	ddr_pll /= (1 << out_div);
+
+	clk_ctrl = ath79_pll_rr(QCA953X_PLL_CLK_CTRL_REG);
+
+	postdiv = (clk_ctrl >> QCA953X_PLL_CLK_CTRL_CPU_POST_DIV_SHIFT) &
+		  QCA953X_PLL_CLK_CTRL_CPU_POST_DIV_MASK;
+
+	if (clk_ctrl & QCA953X_PLL_CLK_CTRL_CPU_PLL_BYPASS)
+		ath79_cpu_clk.rate = ath79_ref_clk.rate;
+	else if (clk_ctrl & QCA953X_PLL_CLK_CTRL_CPUCLK_FROM_CPUPLL)
+		ath79_cpu_clk.rate = cpu_pll / (postdiv + 1);
+	else
+		ath79_cpu_clk.rate = ddr_pll / (postdiv + 1);
+
+	postdiv = (clk_ctrl >> QCA953X_PLL_CLK_CTRL_DDR_POST_DIV_SHIFT) &
+		  QCA953X_PLL_CLK_CTRL_DDR_POST_DIV_MASK;
+
+	if (clk_ctrl & QCA953X_PLL_CLK_CTRL_DDR_PLL_BYPASS)
+		ath79_ddr_clk.rate = ath79_ref_clk.rate;
+	else if (clk_ctrl & QCA953X_PLL_CLK_CTRL_DDRCLK_FROM_DDRPLL)
+		ath79_ddr_clk.rate = ddr_pll / (postdiv + 1);
+	else
+		ath79_ddr_clk.rate = cpu_pll / (postdiv + 1);
+
+	postdiv = (clk_ctrl >> QCA953X_PLL_CLK_CTRL_AHB_POST_DIV_SHIFT) &
+		  QCA953X_PLL_CLK_CTRL_AHB_POST_DIV_MASK;
+
+	if (clk_ctrl & QCA953X_PLL_CLK_CTRL_AHB_PLL_BYPASS)
+		ath79_ahb_clk.rate = ath79_ref_clk.rate;
+	else if (clk_ctrl & QCA953X_PLL_CLK_CTRL_AHBCLK_FROM_DDRPLL)
+		ath79_ahb_clk.rate = ddr_pll / (postdiv + 1);
+	else
+		ath79_ahb_clk.rate = cpu_pll / (postdiv + 1);
+
+	ath79_wdt_clk.rate = ath79_ref_clk.rate;
+	ath79_uart_clk.rate = ath79_ref_clk.rate;
+}
+
 static void __init qca955x_clocks_init(void)
 {
 	u32 pll, out_div, ref_div, nint, frac, clk_ctrl, postdiv;
@@ -371,6 +447,7 @@
 	ath79_uart_clk.rate = ath79_ref_clk.rate;
 }
 
+
 void __init ath79_clocks_init(void)
 {
 	if (soc_is_ar71xx())
@@ -383,6 +460,8 @@
 		ar933x_clocks_init();
 	else if (soc_is_ar934x())
 		ar934x_clocks_init();
+	else if (soc_is_qca953x())
+		qca953x_clocks_init();
 	else if (soc_is_qca955x())
 		qca955x_clocks_init();
 	else
diff -Nur a/arch/mips/ath79/common.c b/arch/mips/ath79/common.c
--- a/arch/mips/ath79/common.c	2014-11-06 15:26:04.319748263 +0800
+++ b/arch/mips/ath79/common.c	2014-11-06 11:46:27.011326588 +0800
@@ -74,6 +74,8 @@
 	else if (soc_is_ar934x() ||
 		 soc_is_qca955x())
 		reg = AR934X_RESET_REG_RESET_MODULE;
+	else if (soc_is_qca953x())
+		reg = QCA953X_RESET_REG_RESET_MODULE;
 	else
 		BUG();
 
@@ -101,6 +103,8 @@
 	else if (soc_is_ar934x() ||
 		 soc_is_qca955x())
 		reg = AR934X_RESET_REG_RESET_MODULE;
+	else if (soc_is_qca953x())
+		reg = QCA953X_RESET_REG_RESET_MODULE;
 	else
 		BUG();
 
diff -Nur a/arch/mips/ath79/common.h b/arch/mips/ath79/common.h
--- a/arch/mips/ath79/common.h	2014-11-06 15:26:04.331748264 +0800
+++ b/arch/mips/ath79/common.h	2014-11-06 11:46:27.035326588 +0800
@@ -29,4 +29,6 @@
 void ath79_gpio_output_select(unsigned gpio, u8 val);
 void ath79_gpio_init(void);
 
+void qca953x_gpio_set_value(unsigned gpio, int  value);
+void qca953x_gpio_direction_select(unsigned gpio,int direction);
 #endif /* __ATH79_COMMON_H */
diff -Nur a/arch/mips/ath79/dev-common.c b/arch/mips/ath79/dev-common.c
--- a/arch/mips/ath79/dev-common.c	2014-11-06 15:26:04.411748266 +0800
+++ b/arch/mips/ath79/dev-common.c	2014-11-06 11:46:27.015326588 +0800
@@ -100,6 +100,7 @@
 	    soc_is_ar724x() ||
 	    soc_is_ar913x() ||
 	    soc_is_ar934x() ||
+	    soc_is_qca953x() ||
 	    soc_is_qca955x()) {
 		ath79_uart_data[0].uartclk = clk_get_rate(clk);
 		platform_device_register(&ath79_uart_device);
diff -Nur a/arch/mips/ath79/dev-eth.c b/arch/mips/ath79/dev-eth.c
--- a/arch/mips/ath79/dev-eth.c	2014-11-06 09:38:21.883080663 +0800
+++ b/arch/mips/ath79/dev-eth.c	2014-11-06 11:46:27.015326588 +0800
@@ -195,6 +195,7 @@
 	case ATH79_SOC_AR7241:
 	case ATH79_SOC_AR9330:
 	case ATH79_SOC_AR9331:
+	case ATH79_SOC_QCA953x:
 		mdio_dev = &ath79_mdio1_device;
 		mdio_data = &ath79_mdio1_data;
 		break;
@@ -250,6 +251,11 @@
 		}
 		mdio_data->is_ar934x = 1;
 		break;
+
+	case ATH79_SOC_QCA953x:
+		mdio_data->builtin_switch = 1;
+		break;
+		
 	case ATH79_SOC_QCA9558:
 		if (id == 1)
 			mdio_data->builtin_switch = 1;
@@ -540,6 +546,7 @@
 	case ATH79_SOC_AR9341:
 	case ATH79_SOC_AR9342:
 	case ATH79_SOC_AR9344:
+	case ATH79_SOC_QCA953x:
 	case ATH79_SOC_QCA9558:
 		pll_10 = AR934X_PLL_VAL_10;
 		pll_100 = AR934X_PLL_VAL_100;
@@ -596,6 +603,7 @@
 		case ATH79_SOC_AR7241:
 		case ATH79_SOC_AR9330:
 		case ATH79_SOC_AR9331:
+		case ATH79_SOC_QCA953x:
 			pdata->phy_if_mode = PHY_INTERFACE_MODE_MII;
 			break;
 
@@ -645,6 +653,7 @@
 		case ATH79_SOC_AR7241:
 		case ATH79_SOC_AR9330:
 		case ATH79_SOC_AR9331:
+		case ATH79_SOC_QCA953x:
 			pdata->phy_if_mode = PHY_INTERFACE_MODE_GMII;
 			break;
 
@@ -906,6 +915,36 @@
 		pdata->has_gbit = 1;
 		pdata->is_ar724x = 1;
 
+	case ATH79_SOC_QCA953x:
+		if (id == 0) {
+			pdata->reset_bit = AR933X_RESET_GE0_MAC |
+					   AR933X_RESET_GE0_MDIO;
+			pdata->set_speed = ath79_set_speed_dummy;
+
+			pdata->phy_mask = BIT(4);
+		} else {
+			pdata->reset_bit = AR933X_RESET_GE1_MAC |
+					   AR933X_RESET_GE1_MDIO;
+			pdata->set_speed = ath79_set_speed_dummy;
+
+			pdata->speed = SPEED_1000;
+			pdata->duplex = DUPLEX_FULL;
+			pdata->switch_data = &ath79_switch_data;
+
+			ath79_switch_data.phy_poll_mask |= BIT(4);
+		}
+
+		pdata->ddr_flush = ath79_ddr_no_flush;
+		pdata->has_gbit = 1;
+		pdata->is_ar724x = 1;
+
+		if (!pdata->fifo_cfg1)
+			pdata->fifo_cfg1 = 0x0010ffff;
+		if (!pdata->fifo_cfg2)
+			pdata->fifo_cfg2 = 0x015500aa;
+		if (!pdata->fifo_cfg3)
+			pdata->fifo_cfg3 = 0x01f00140;
+		break;
 		if (!pdata->fifo_cfg1)
 			pdata->fifo_cfg1 = 0x0010ffff;
 		if (!pdata->fifo_cfg2)
@@ -953,6 +992,7 @@
 		case ATH79_SOC_AR7241:
 		case ATH79_SOC_AR9330:
 		case ATH79_SOC_AR9331:
+		case ATH79_SOC_QCA953x:
 			pdata->mii_bus_dev = &ath79_mdio1_device.dev;
 			break;
 
diff -Nur a/arch/mips/ath79/dev-usb.c b/arch/mips/ath79/dev-usb.c
--- a/arch/mips/ath79/dev-usb.c	2014-11-06 15:26:03.591748240 +0800
+++ b/arch/mips/ath79/dev-usb.c	2014-11-06 11:46:27.015326588 +0800
@@ -263,6 +263,30 @@
 	pdev->dev.coherent_dma_mask = DMA_BIT_MASK(32);
 }
 
+
+static void __init qca953x_usb_setup(void)
+{
+	ath79_device_reset_set(QCA953X_RESET_USBSUS_OVERRIDE);
+	udelay(1000);
+
+	ath79_device_reset_clear(QCA953X_RESET_USB_PHY);
+	udelay(1000);
+
+	ath79_device_reset_clear(QCA953X_RESET_USB_PHY_ANALOG);
+	udelay(1000);
+
+	ath79_device_reset_clear(QCA953X_RESET_USB_HOST);
+	udelay(1000);
+
+	ath79_usb_init_resource(ath79_ehci_resources,
+				QCA953X_EHCI0_BASE, QCA953X_EHCI_SIZE,
+				ATH79_CPU_IRQ_USB);
+
+
+	ath79_ehci_device.dev.platform_data = &ath79_ehci_pdata_v2;
+	platform_device_register(&ath79_ehci_device);
+
+}
 void __init ath79_register_usb(void)
 {
 	if (soc_is_ar71xx())
@@ -277,6 +301,8 @@
 		ar933x_usb_setup();
 	else if (soc_is_ar934x())
 		ar934x_usb_setup();
+	else if(soc_is_qca953x())
+		qca953x_usb_setup();
 	else if (soc_is_qca955x())
 		qca955x_usb_setup();
 	else
diff -Nur a/arch/mips/ath79/dev-wmac.c b/arch/mips/ath79/dev-wmac.c
--- a/arch/mips/ath79/dev-wmac.c	2014-11-06 15:26:04.715748276 +0800
+++ b/arch/mips/ath79/dev-wmac.c	2014-11-06 11:46:27.015326588 +0800
@@ -147,6 +147,26 @@
 		ath79_wmac_data.is_clk_25mhz = true;
 }
 
+static void qca953x_wmac_setup(void)
+{
+	u32 t;
+
+	ath79_wmac_device.name = "qca953x_wmac";
+
+	ath79_wmac_resources[0].start = QCA953X_WMAC_BASE;
+	ath79_wmac_resources[0].end = QCA953X_WMAC_BASE + QCA953X_WMAC_SIZE - 1;
+	ath79_wmac_resources[1].start = ATH79_CPU_IRQ(2);
+	ath79_wmac_resources[1].end = ATH79_CPU_IRQ(2);
+
+	t = ath79_reset_rr(QCA953X_RESET_REG_BOOTSTRAP);
+	if (t & QCA953X_BOOTSTRAP_REF_CLK_40)
+		ath79_wmac_data.is_clk_25mhz = false;
+	else
+		ath79_wmac_data.is_clk_25mhz = true;
+
+	ath79_wmac_data.get_mac_revision = ar933x_r1_get_wmac_revision;
+}
+
 static void qca955x_wmac_setup(void)
 {
 	u32 t;
@@ -314,6 +334,8 @@
 		ar933x_wmac_setup();
 	else if (soc_is_ar934x())
 		ar934x_wmac_setup();
+	else if (soc_is_qca953x())
+		qca953x_wmac_setup();
 	else if (soc_is_qca955x())
 		qca955x_wmac_setup();
 	else
diff -Nur a/arch/mips/ath79/early_printk.c b/arch/mips/ath79/early_printk.c
--- a/arch/mips/ath79/early_printk.c	2014-11-06 15:26:04.427748267 +0800
+++ b/arch/mips/ath79/early_printk.c	2014-11-06 11:46:27.019326588 +0800
@@ -114,6 +114,7 @@
 	case REV_ID_MAJOR_AR9341:
 	case REV_ID_MAJOR_AR9342:
 	case REV_ID_MAJOR_AR9344:
+	case REV_ID_MAJOR_QCA953x:
 	case REV_ID_MAJOR_QCA9558:
 		_prom_putchar = prom_putchar_ar71xx;
 		break;
diff -Nur a/arch/mips/ath79/gpio.c b/arch/mips/ath79/gpio.c
--- a/arch/mips/ath79/gpio.c	2014-11-06 15:26:04.331748264 +0800
+++ b/arch/mips/ath79/gpio.c	2014-11-06 11:46:27.035326588 +0800
@@ -148,7 +148,8 @@
 	    soc_is_ar913x() ||
 	    soc_is_ar933x())
 		reg = AR71XX_GPIO_REG_FUNC;
-	else if (soc_is_ar934x())
+	else if (soc_is_ar934x()||
+		soc_is_qca953x())
 		reg = AR934X_GPIO_REG_FUNC;
 	else
 		BUG();
@@ -205,10 +206,12 @@
 	unsigned int reg;
 	u32 t, s;
 
-	BUG_ON(!soc_is_ar934x());
+	BUG_ON(!soc_is_ar934x()&&!soc_is_qca953x());
 
-	if (gpio >= AR934X_GPIO_COUNT)
+	if (gpio >= ath79_gpio_count){
+		printk("\ngpio(%u) >= %lu,error!\n",gpio,ath79_gpio_count);
 		return;
+	}
 
 	reg = AR934X_GPIO_REG_OUT_FUNC0 + 4 * (gpio / 4);
 	s = 8 * (gpio % 4);
@@ -240,6 +243,8 @@
 		ath79_gpio_count = AR933X_GPIO_COUNT;
 	else if (soc_is_ar934x())
 		ath79_gpio_count = AR934X_GPIO_COUNT;
+	else if (soc_is_qca953x())
+		ath79_gpio_count = QCA953X_GPIO_COUNT;
 	else if (soc_is_qca955x())
 		ath79_gpio_count = QCA955X_GPIO_COUNT;
 	else
@@ -247,7 +252,7 @@
 
 	ath79_gpio_base = ioremap_nocache(AR71XX_GPIO_BASE, AR71XX_GPIO_SIZE);
 	ath79_gpio_chip.ngpio = ath79_gpio_count;
-	if (soc_is_ar934x() || soc_is_qca955x()) {
+	if (soc_is_ar934x() || soc_is_qca953x() || soc_is_qca955x()) {
 		ath79_gpio_chip.direction_input = ar934x_gpio_direction_input;
 		ath79_gpio_chip.direction_output = ar934x_gpio_direction_output;
 	}
@@ -257,6 +262,29 @@
 		panic("cannot add AR71xx GPIO chip, error=%d", err);
 }
 
+
+/* direction :0  output  , 1 input   */
+void qca953x_gpio_direction_select(unsigned gpio,int direction){
+	
+	void __iomem *base = ath79_gpio_base;
+
+	if(direction)
+	__raw_writel(__raw_readl(base + AR71XX_GPIO_REG_OE) |(1 << gpio),
+		     base + AR71XX_GPIO_REG_OE);
+	else
+	__raw_writel(__raw_readl(base + AR71XX_GPIO_REG_OE) & ~(1 << gpio),
+		     base + AR71XX_GPIO_REG_OE);
+
+	
+
+}
+void qca953x_gpio_set_value(unsigned gpio, int  value){
+	if (gpio < ath79_gpio_count)
+		__ath79_gpio_set_value(gpio, value);
+	else
+		__gpio_set_value(gpio, value);
+}
+
 int gpio_get_value(unsigned gpio)
 {
 	if (gpio < ath79_gpio_count)
@@ -278,6 +306,7 @@
 int gpio_to_irq(unsigned gpio)
 {
 	/* FIXME */
+	return __gpio_to_irq(gpio);
 	return -EINVAL;
 }
 EXPORT_SYMBOL(gpio_to_irq);
@@ -285,6 +314,7 @@
 int irq_to_gpio(unsigned irq)
 {
 	/* FIXME */
+
 	return -EINVAL;
 }
 EXPORT_SYMBOL(irq_to_gpio);
diff -Nur a/arch/mips/ath79/irq.c b/arch/mips/ath79/irq.c
--- a/arch/mips/ath79/irq.c	2014-11-06 15:26:03.763748245 +0800
+++ b/arch/mips/ath79/irq.c	2014-11-06 11:46:27.019326588 +0800
@@ -106,6 +106,7 @@
 	else if (soc_is_ar724x() ||
 		 soc_is_ar933x() ||
 		 soc_is_ar934x() ||
+		 soc_is_qca953x() ||
 		 soc_is_qca955x())
 		ath79_misc_irq_chip.irq_ack = ar724x_misc_irq_ack;
 	else
@@ -352,6 +353,9 @@
 	} else if (soc_is_ar934x()) {
 		ath79_ip2_handler = ath79_default_ip2_handler;
 		ath79_ip3_handler = ar934x_ip3_handler;
+	} else if (soc_is_qca953x()) {
+		ath79_ip2_handler = ath79_default_ip2_handler;
+		ath79_ip3_handler = ath79_default_ip3_handler;
 	} else if (soc_is_qca955x()) {
 		ath79_ip2_handler = ath79_default_ip2_handler;
 		ath79_ip3_handler = ath79_default_ip3_handler;
diff -Nur a/arch/mips/ath79/Kconfig b/arch/mips/ath79/Kconfig
--- a/arch/mips/ath79/Kconfig	2014-11-06 15:26:04.643748274 +0800
+++ b/arch/mips/ath79/Kconfig	2014-11-06 11:46:27.019326588 +0800
@@ -82,6 +82,19 @@
 	  Say 'Y' here if you want your kernel to support the
 	  Atheros AP136 reference board.
 
+config ATH79_MACH_AP143
+       	bool "Atheros AP143 reference board"
+       	select SOC_QCA953X
+       	select ATH79_DEV_ETH
+       	select ATH79_DEV_GPIO_BUTTONS
+       	select ATH79_DEV_LEDS_GPIO
+       	select ATH79_DEV_M25P80
+       	select ATH79_DEV_USB
+       	select ATH79_DEV_WMAC
+	help
+	  Say 'Y' here if you want your kernel to support the
+	  Atheros AP143 reference board.
+
 config ATH79_MACH_AP81
 	bool "Atheros AP81 reference board"
 	select SOC_AR913X
@@ -677,6 +690,10 @@
 	select PCI_AR724X if PCI
 	def_bool n
 
+config SOC_QCA953X
+	select USB_ARCH_HAS_EHCI
+	def_bool n
+
 config SOC_QCA955X
 	select USB_ARCH_HAS_EHCI
 	select HW_HAS_PCI
@@ -720,7 +737,7 @@
 	def_bool n
 
 config ATH79_DEV_WMAC
-	depends on (SOC_AR913X || SOC_AR933X || SOC_AR934X || SOC_QCA955X)
+	depends on (SOC_AR913X || SOC_AR933X || SOC_AR934X || SOC_QCA953X || SOC_QCA955X)
 	def_bool n
 
 config ATH79_NVRAM
diff -Nur a/arch/mips/ath79/machtypes.h b/arch/mips/ath79/machtypes.h
--- a/arch/mips/ath79/machtypes.h	2014-11-06 15:26:04.659748274 +0800
+++ b/arch/mips/ath79/machtypes.h	2014-11-06 11:46:27.019326588 +0800
@@ -117,6 +117,7 @@
 	ATH79_MACH_WZR_HP_G450H,	/* Buffalo WZR-HP-G450H */
 	ATH79_MACH_ZCN_1523H_2,		/* Zcomax ZCN-1523H-2-xx */
 	ATH79_MACH_ZCN_1523H_5,		/* Zcomax ZCN-1523H-5-xx */
+	ATH79_MACH_AP143,
 };
 
 #endif /* _ATH79_MACHTYPE_H */
diff -Nur a/arch/mips/ath79/Makefile b/arch/mips/ath79/Makefile
--- a/arch/mips/ath79/Makefile	2014-11-06 15:26:04.643748274 +0800
+++ b/arch/mips/ath79/Makefile	2014-11-06 11:46:27.019326588 +0800
@@ -45,6 +45,7 @@
 obj-$(CONFIG_ATH79_MACH_AP113)		+= mach-ap113.o
 obj-$(CONFIG_ATH79_MACH_AP121)		+= mach-ap121.o
 obj-$(CONFIG_ATH79_MACH_AP136)		+= mach-ap136.o
+obj-$(CONFIG_ATH79_MACH_AP143)		+= mach-ap143.o
 obj-$(CONFIG_ATH79_MACH_AP81)		+= mach-ap81.o
 obj-$(CONFIG_ATH79_MACH_AP83)		+= mach-ap83.o
 obj-$(CONFIG_ATH79_MACH_AP96)		+= mach-ap96.o
diff -Nur a/arch/mips/ath79/setup.c b/arch/mips/ath79/setup.c
--- a/arch/mips/ath79/setup.c	2014-11-06 15:26:04.387748265 +0800
+++ b/arch/mips/ath79/setup.c	2014-11-06 11:46:27.019326588 +0800
@@ -164,6 +164,12 @@
 		rev = id & AR934X_REV_ID_REVISION_MASK;
 		break;
 
+	case REV_ID_MAJOR_QCA953x:
+		ath79_soc = ATH79_SOC_QCA953x;
+		chip = "953x";
+		rev = id & QCA953X_REV_ID_REVISION_MASK;
+		break;
+
 	case REV_ID_MAJOR_QCA9558:
 		ath79_soc = ATH79_SOC_QCA9558;
 		chip = "9558";
@@ -176,7 +182,7 @@
 
 	ath79_soc_rev = rev;
 
-	if (soc_is_qca955x())
+	if (soc_is_qca953x() || soc_is_qca955x())
 		sprintf(ath79_sys_type, "Qualcomm Atheros QCA%s rev %u",
 			chip, rev);
 	else
diff -Nur a/arch/mips/include/asm/mach-ath79/ar71xx_regs.h b/arch/mips/include/asm/mach-ath79/ar71xx_regs.h
--- a/arch/mips/include/asm/mach-ath79/ar71xx_regs.h	2014-11-06 15:26:04.671748274 +0800
+++ b/arch/mips/include/asm/mach-ath79/ar71xx_regs.h	2014-11-06 11:46:27.019326588 +0800
@@ -103,6 +103,14 @@
 #define AR934X_EHCI_SIZE	0x200
 #define AR934X_SRIF_BASE	(AR71XX_APB_BASE + 0x00116000)
 #define AR934X_SRIF_SIZE	0x1000
+
+#define QCA953X_WMAC_BASE	(AR71XX_APB_BASE + 0x00100000)
+#define QCA953X_WMAC_SIZE	0x20000
+
+/* BEGIN: Added by vicharl,wnc  2014/5/29 */
+#define QCA953X_EHCI0_BASE	0x1b000000
+#define QCA953X_EHCI_SIZE	0x1000
+/* END:   Added by vicharl,wnc  2014/5/29 */
 #define AR934X_NFC_BASE		0x1b000200
 #define AR934X_NFC_SIZE		0xb8
 
@@ -280,6 +288,43 @@
 
 #define AR934X_PLL_SWITCH_CLOCK_CONTROL_MDIO_CLK_SEL	BIT(6)
 
+#define QCA953X_PLL_CPU_CONFIG_REG		0x00
+#define QCA953X_PLL_DDR_CONFIG_REG		0x04
+#define QCA953X_PLL_CLK_CTRL_REG		0x08
+#define QCA953X_PLL_ETH_XMII_CONTROL_REG	0x2c
+#define QCA953X_PLL_ETH_SGMII_CONTROL_REG	0x48
+
+#define QCA953X_PLL_CPU_CONFIG_NFRAC_SHIFT	0
+#define QCA953X_PLL_CPU_CONFIG_NFRAC_MASK	0x3f
+#define QCA953X_PLL_CPU_CONFIG_NINT_SHIFT	6
+#define QCA953X_PLL_CPU_CONFIG_NINT_MASK	0x3f
+#define QCA953X_PLL_CPU_CONFIG_REFDIV_SHIFT	12
+#define QCA953X_PLL_CPU_CONFIG_REFDIV_MASK	0x1f
+#define QCA953X_PLL_CPU_CONFIG_OUTDIV_SHIFT	19
+#define QCA953X_PLL_CPU_CONFIG_OUTDIV_MASK	0x3
+
+#define QCA953X_PLL_DDR_CONFIG_NFRAC_SHIFT	0
+#define QCA953X_PLL_DDR_CONFIG_NFRAC_MASK	0x3ff
+#define QCA953X_PLL_DDR_CONFIG_NINT_SHIFT	10
+#define QCA953X_PLL_DDR_CONFIG_NINT_MASK	0x3f
+#define QCA953X_PLL_DDR_CONFIG_REFDIV_SHIFT	16
+#define QCA953X_PLL_DDR_CONFIG_REFDIV_MASK	0x1f
+#define QCA953X_PLL_DDR_CONFIG_OUTDIV_SHIFT	23
+#define QCA953X_PLL_DDR_CONFIG_OUTDIV_MASK	0x7
+
+#define QCA953X_PLL_CLK_CTRL_CPU_PLL_BYPASS		BIT(2)
+#define QCA953X_PLL_CLK_CTRL_DDR_PLL_BYPASS		BIT(3)
+#define QCA953X_PLL_CLK_CTRL_AHB_PLL_BYPASS		BIT(4)
+#define QCA953X_PLL_CLK_CTRL_CPU_POST_DIV_SHIFT		5
+#define QCA953X_PLL_CLK_CTRL_CPU_POST_DIV_MASK		0x1f
+#define QCA953X_PLL_CLK_CTRL_DDR_POST_DIV_SHIFT		10
+#define QCA953X_PLL_CLK_CTRL_DDR_POST_DIV_MASK		0x1f
+#define QCA953X_PLL_CLK_CTRL_AHB_POST_DIV_SHIFT		15
+#define QCA953X_PLL_CLK_CTRL_AHB_POST_DIV_MASK		0x1f
+#define QCA953X_PLL_CLK_CTRL_CPUCLK_FROM_CPUPLL		BIT(20)
+#define QCA953X_PLL_CLK_CTRL_DDRCLK_FROM_DDRPLL		BIT(21)
+#define QCA953X_PLL_CLK_CTRL_AHBCLK_FROM_DDRPLL		BIT(24)
+
 #define QCA955X_PLL_CPU_CONFIG_REG		0x00
 #define QCA955X_PLL_DDR_CONFIG_REG		0x04
 #define QCA955X_PLL_CLK_CTRL_REG		0x08
@@ -354,6 +399,9 @@
 #define AR934X_RESET_REG_BOOTSTRAP		0xb0
 #define AR934X_RESET_REG_PCIE_WMAC_INT_STATUS	0xac
 
+#define QCA953X_RESET_REG_RESET_MODULE		0x1c
+#define QCA953X_RESET_REG_BOOTSTRAP		0xb0
+#define QCA953X_RESET_REG_EXT_INT_STATUS	0xac
 #define QCA955X_RESET_REG_BOOTSTRAP		0xb0
 #define QCA955X_RESET_REG_EXT_INT_STATUS	0xac
 
@@ -448,6 +496,25 @@
 #define AR934X_RESET_MBOX		BIT(1)
 #define AR934X_RESET_I2S		BIT(0)
 
+
+/* BEGIN: Added by vicharl,wnc  2014/5/29 */
+#define QCA953X_RESET_USB_PHY_PLL_PWD_EXT BIT(15)
+#define QCA953X_RESET_NANDF		BIT(14)
+#define QCA953X_RESET_GE1_MAC		BIT(13)
+#define QCA953X_RESET_SGMII_ANALOG	BIT(12)
+#define QCA953X_RESET_USB_PHY_ANALOG	BIT(11)
+#define QCA953X_RESET_HOST_DMA_INT	BIT(10)
+#define QCA953X_RESET_GE0_MAC		BIT(9)
+#define QCA953X_RESET_SGMII		BIT(8)
+#define QCA953X_RESET_PCIE_PHY		BIT(7)
+#define QCA953X_RESET_PCIE		BIT(6)
+#define QCA953X_RESET_USB_HOST		BIT(5)
+#define QCA953X_RESET_USB_PHY		BIT(4)
+#define QCA953X_RESET_USBSUS_OVERRIDE	BIT(3)
+#define QCA953X_RESET_LUT		BIT(2)
+#define QCA953X_RESET_MBOX		BIT(1)
+#define QCA953X_RESET_I2S		BIT(0)
+/* END:   Added by vicharl,wnc  2014/5/29 */
 #define AR933X_BOOTSTRAP_MDIO_GPIO_EN	BIT(18)
 #define AR933X_BOOTSTRAP_EEPBUSY	BIT(4)
 #define AR933X_BOOTSTRAP_REF_CLK_40	BIT(0)
@@ -468,6 +535,8 @@
 #define AR934X_BOOTSTRAP_SDRAM_DISABLED	BIT(1)
 #define AR934X_BOOTSTRAP_DDR1		BIT(0)
 
+#define QCA953X_BOOTSTRAP_REF_CLK_40	BIT(4)
+
 #define QCA955X_BOOTSTRAP_REF_CLK_40	BIT(4)
 
 #define AR934X_PCIE_WMAC_INT_WMAC_MISC		BIT(0)
@@ -488,6 +557,30 @@
 	 AR934X_PCIE_WMAC_INT_PCIE_RC1 | AR934X_PCIE_WMAC_INT_PCIE_RC2 | \
 	 AR934X_PCIE_WMAC_INT_PCIE_RC3)
 
+/* BEGIN: Added by vicharl,wnc  2014/5/29 */
+#define QCA953X_EXT_INT_WMAC_MISC		BIT(0)
+#define QCA953X_EXT_INT_WMAC_TX			BIT(1)
+#define QCA953X_EXT_INT_WMAC_RXLP		BIT(2)
+#define QCA953X_EXT_INT_WMAC_RXHP		BIT(3)
+#define QCA953X_EXT_INT_PCIE_RC1		BIT(4)
+#define QCA953X_EXT_INT_PCIE_RC1_INT0		BIT(5)
+#define QCA953X_EXT_INT_PCIE_RC1_INT1		BIT(6)
+#define QCA953X_EXT_INT_PCIE_RC1_INT2		BIT(7)
+#define QCA953X_EXT_INT_PCIE_RC1_INT3		BIT(8)
+
+#define QCA953X_EXT_INT_WMAC_ALL \
+	(QCA953X_EXT_INT_WMAC_MISC | QCA953X_EXT_INT_WMAC_TX | \
+	 QCA953X_EXT_INT_WMAC_RXLP | QCA953X_EXT_INT_WMAC_RXHP)
+
+#define QCA953X_EXT_INT_PCIE_RC1_ALL \
+	(QCA953X_EXT_INT_PCIE_RC1 | QCA953X_EXT_INT_PCIE_RC1_INT0 | \
+	 QCA953X_EXT_INT_PCIE_RC1_INT1 | QCA953X_EXT_INT_PCIE_RC1_INT2 | \
+	 QCA953X_EXT_INT_PCIE_RC1_INT3)
+
+
+/* END:   Added by vicharl,wnc  2014/5/29 */
+
+
 #define QCA955X_EXT_INT_WMAC_MISC		BIT(0)
 #define QCA955X_EXT_INT_WMAC_TX			BIT(1)
 #define QCA955X_EXT_INT_WMAC_RXLP		BIT(2)
@@ -530,6 +623,7 @@
 #define REV_ID_MAJOR_AR9341		0x0120
 #define REV_ID_MAJOR_AR9342		0x1120
 #define REV_ID_MAJOR_AR9344		0x2120
+#define REV_ID_MAJOR_QCA953x		0x0140
 #define REV_ID_MAJOR_QCA9558		0x1130
 
 #define AR71XX_REV_ID_MINOR_MASK	0x3
@@ -552,6 +646,7 @@
 #define AR934X_REV_ID_REVISION_MASK     0xf
 
 #define AR944X_REV_ID_REVISION_MASK	0xf
+#define QCA953X_REV_ID_REVISION_MASK	0xf
 
 /*
  * SPI block
@@ -603,6 +698,7 @@
 #define AR913X_GPIO_COUNT		22
 #define AR933X_GPIO_COUNT		30
 #define AR934X_GPIO_COUNT		23
+#define QCA953X_GPIO_COUNT		24
 #define QCA955X_GPIO_COUNT		24
 
 /*
diff -Nur a/arch/mips/include/asm/mach-ath79/ath79.h b/arch/mips/include/asm/mach-ath79/ath79.h
--- a/arch/mips/include/asm/mach-ath79/ath79.h	2014-11-06 15:26:04.319748263 +0800
+++ b/arch/mips/include/asm/mach-ath79/ath79.h	2014-11-06 11:46:27.019326588 +0800
@@ -32,6 +32,8 @@
 	ATH79_SOC_AR9341,
 	ATH79_SOC_AR9342,
 	ATH79_SOC_AR9344,
+	ATH79_SOC_QCA9533,
+	ATH79_SOC_QCA953x,
 	ATH79_SOC_QCA9558,
 };
 
@@ -99,6 +101,15 @@
 	return soc_is_ar9341() || soc_is_ar9342() || soc_is_ar9344();
 }
 
+static inline int soc_is_qca9533(void)
+{
+	return ath79_soc == ATH79_SOC_QCA953x;
+}
+
+static inline int soc_is_qca953x(void)
+{
+	return ath79_soc == ATH79_SOC_QCA953x;;
+}
 static inline int soc_is_qca9558(void)
 {
 	return ath79_soc == ATH79_SOC_QCA9558;
diff -Nur a/arch/mips/include/asm/mach-ath79/irq.h b/arch/mips/include/asm/mach-ath79/irq.h
--- a/arch/mips/include/asm/mach-ath79/irq.h	2014-11-06 15:26:03.763748245 +0800
+++ b/arch/mips/include/asm/mach-ath79/irq.h	2014-11-06 11:46:27.035326588 +0800
@@ -10,7 +10,9 @@
 #define __ASM_MACH_ATH79_IRQ_H
 
 #define MIPS_CPU_IRQ_BASE	0
-#define NR_IRQS			51
+#define NR_IRQS			64//vicharl change 51 =>64
+
+#define ATH79_CPU_IRQ(_x)	(MIPS_CPU_IRQ_BASE + (_x))
 
 #define ATH79_MISC_IRQ_BASE	8
 #define ATH79_MISC_IRQ_COUNT	32
@@ -49,6 +51,9 @@
 #define ATH79_MISC_IRQ_TIMER4	(ATH79_MISC_IRQ_BASE + 10)
 #define ATH79_MISC_IRQ_ETHSW	(ATH79_MISC_IRQ_BASE + 12)
 
+#define ATH79_GPIO_IRQ_BASE		ATH79_MISC_IRQ_BASE+ATH79_MISC_IRQ_COUNT
+#define ATH_GPIO_IRQn(_gpio)		ATH79_GPIO_IRQ_BASE+(_gpio)
+
 #include_next <irq.h>
 
 #endif /* __ASM_MACH_ATH79_IRQ_H */
